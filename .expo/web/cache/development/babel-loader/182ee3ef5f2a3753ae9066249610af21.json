{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/lokpati/Desktop/EmployeesManager/src/screens/AddEmployeeScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { connect } from \"react-redux\";\nimport { onNameChangeAction, onPhoneChangeAction, onShiftChangeAction, addEmployee } from \"../reudx/actions/employeeAction\";\n\nvar AddEmployeeScreen = function (_React$Component) {\n  _inherits(AddEmployeeScreen, _React$Component);\n\n  var _super = _createSuper(AddEmployeeScreen);\n\n  function AddEmployeeScreen() {\n    var _this;\n\n    _classCallCheck(this, AddEmployeeScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.saveEmploye = function () {\n      var _this$props = _this.props,\n          name = _this$props.name,\n          phone = _this$props.phone,\n          shift = _this$props.shift;\n      var newEmployee = {\n        name: name,\n        phone: phone,\n        shift: shift\n      };\n\n      _this.props.addEmployee(newEmployee);\n\n      _this.props.navigation.navigate(\"EmployeeList\");\n    };\n\n    return _this;\n  }\n\n  _createClass(AddEmployeeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        value: this.props.name,\n        onChangeText: function onChangeText(text) {\n          return _this2.props.onNameChangeAction(text);\n        },\n        style: styles.inputContainer,\n        placeholder: \"Employee Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        value: this.props.phone,\n        onChangeText: function onChangeText(text) {\n          return _this2.props.onPhoneChangeAction(text);\n        },\n        style: styles.inputContainer,\n        placeholder: \"Phone Number\",\n        keyboardType: \"number-pad\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        value: this.props.shift,\n        onChangeText: function onChangeText(text) {\n          return _this2.props.onShiftChangeAction(text);\n        },\n        style: styles.inputContainer,\n        placeholder: \"Shift\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"Save\",\n        onPress: function onPress() {\n          return _this2.saveEmploye();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return AddEmployeeScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    margin: 10\n  },\n  inputContainer: {\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: \"grey\",\n    borderRadius: 5,\n    textAlign: \"center\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    name: state.employee.name,\n    phone: state.employee.phone,\n    shift: state.employee.shift\n  };\n};\n\nexport default connect(mapStateToProps, {\n  onNameChangeAction: onNameChangeAction,\n  onPhoneChangeAction: onPhoneChangeAction,\n  onShiftChangeAction: onShiftChangeAction,\n  addEmployee: addEmployee\n})(AddEmployeeScreen);","map":{"version":3,"sources":["/home/lokpati/Desktop/EmployeesManager/src/screens/AddEmployeeScreen.js"],"names":["React","connect","onNameChangeAction","onPhoneChangeAction","onShiftChangeAction","addEmployee","AddEmployeeScreen","saveEmploye","props","name","phone","shift","newEmployee","navigation","navigate","styles","container","text","inputContainer","Component","StyleSheet","create","flex","margin","marginBottom","borderWidth","borderColor","borderRadius","textAlign","mapStateToProps","state","employee"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, StyleSheet, TextInput, Button } from \"react-native\";\nimport { connect } from \"react-redux\";\n\nimport {\n  onNameChangeAction,\n  onPhoneChangeAction,\n  onShiftChangeAction,\n  addEmployee,\n} from \"../reudx/actions/employeeAction\";\n\nclass AddEmployeeScreen extends React.Component {\n  saveEmploye = () => {\n    const { name, phone, shift } = this.props;\n    const newEmployee = { name, phone, shift };\n    this.props.addEmployee(newEmployee);\n    this.props.navigation.navigate(\"EmployeeList\");\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <TextInput\n          value={this.props.name}\n          onChangeText={(text) => this.props.onNameChangeAction(text)}\n          style={styles.inputContainer}\n          placeholder=\"Employee Name\"\n        />\n        <TextInput\n          value={this.props.phone}\n          onChangeText={(text) => this.props.onPhoneChangeAction(text)}\n          style={styles.inputContainer}\n          placeholder=\"Phone Number\"\n          keyboardType=\"number-pad\"\n        />\n        <TextInput\n          value={this.props.shift}\n          onChangeText={(text) => this.props.onShiftChangeAction(text)}\n          style={styles.inputContainer}\n          placeholder=\"Shift\"\n        />\n        <Button title=\"Save\" onPress={() => this.saveEmploye()} />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    margin: 10,\n  },\n  inputContainer: {\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: \"grey\",\n    borderRadius: 5,\n    textAlign: \"center\",\n  },\n});\n\nconst mapStateToProps = (state) => ({\n  name: state.employee.name,\n  phone: state.employee.phone,\n  shift: state.employee.shift,\n});\n\nexport default connect(mapStateToProps, {\n  onNameChangeAction,\n  onPhoneChangeAction,\n  onShiftChangeAction,\n  addEmployee,\n})(AddEmployeeScreen);\n"]},"metadata":{},"sourceType":"module"}