{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { NAME_CHANGE, PHONE_CHANGE, SHIFT_CHANGE, ADD_EMPLOYEE } from \"../actions/actionTypes\";\nvar INITIAL_STATE = {\n  name: \"\",\n  phone: \"\",\n  shift: \"\"\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case NAME_CHANGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.payload\n      });\n\n    case PHONE_CHANGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        phone: action.payload\n      });\n\n    case SHIFT_CHANGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        shift: action.payload\n      });\n\n    case ADD_EMPLOYEE:\n      return _objectSpread(_objectSpread({}, state), INITIAL_STATE);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/lokpati/Desktop/EmployeesManager/src/reudx/reducers/addEmployeeReducer.js"],"names":["NAME_CHANGE","PHONE_CHANGE","SHIFT_CHANGE","ADD_EMPLOYEE","INITIAL_STATE","name","phone","shift","state","action","type","payload"],"mappings":";;;;;;AAAA,SACEA,WADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,YAJF;AAOA,IAAMC,aAAa,GAAG;AAAEC,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,KAAK,EAAE,EAAnB;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAAtB;AAEA,gBAAe,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BJ,aAA0B;AAAA,MAAXK,MAAW;;AAEhD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,WAAL;AACE,6CAAYQ,KAAZ;AAAmBH,QAAAA,IAAI,EAAEI,MAAM,CAACE;AAAhC;;AACF,SAAKV,YAAL;AACE,6CAAYO,KAAZ;AAAmBF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAAjC;;AACF,SAAKT,YAAL;AACE,6CAAYM,KAAZ;AAAmBD,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAAjC;;AACF,SAAKR,YAAL;AACE,6CAAYK,KAAZ,GAAsBJ,aAAtB;;AAEF;AACE,aAAOI,KAAP;AAXJ;AAaD,CAfD","sourcesContent":["import {\n  NAME_CHANGE,\n  PHONE_CHANGE,\n  SHIFT_CHANGE,\n  ADD_EMPLOYEE,\n} from \"../actions/actionTypes\";\n\nconst INITIAL_STATE = { name: \"\", phone: \"\", shift: \"\" };\n\nexport default (state = INITIAL_STATE, action) => {\n  // console.log(action);\n  switch (action.type) {\n    case NAME_CHANGE:\n      return { ...state, name: action.payload };\n    case PHONE_CHANGE:\n      return { ...state, phone: action.payload };\n    case SHIFT_CHANGE:\n      return { ...state, shift: action.payload };\n    case ADD_EMPLOYEE:\n      return { ...state, ...INITIAL_STATE };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}