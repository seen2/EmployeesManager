{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport firebase from \"firebase\";\nimport { EMAIL_CHANGE, PASSWORD_CHANGE, LOGIN_SENT, LOGIN_SUCCESS, LOGIN_REJECTED, CREATE_ACCOUNT, ACCOUNT_NOT_CREATED } from \"./actionTypes\";\nexport var emailChangeAction = function emailChangeAction(text) {\n  return {\n    type: EMAIL_CHANGE,\n    payload: text\n  };\n};\nexport var passwordChangeAction = function passwordChangeAction(text) {\n  return {\n    type: PASSWORD_CHANGE,\n    payload: text\n  };\n};\nexport var loginUser = function loginUser(_ref) {\n  var email = _ref.email,\n      password = _ref.password;\n  return function _callee(dispatch) {\n    var user;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            dispatch({\n              type: LOGIN_SENT,\n              payload: null\n            });\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password));\n\n          case 4:\n            user = _context.sent;\n            dispatch({\n              type: LOGIN_SUCCESS,\n              payload: user\n            });\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch({\n              type: LOGIN_REJECTED,\n              payload: _context.t0\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n};\nexport var createAccount = function createAccount(_ref2) {\n  var email = _ref2.email,\n      password = _ref2.password;\n  return function _callee2(dispatch) {\n    var user;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            dispatch({\n              type: LOGIN_SENT,\n              payload: null\n            });\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(email, password));\n\n          case 4:\n            user = _context2.sent;\n            dispatch({\n              type: CREATE_ACCOUNT,\n              payload: user\n            });\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            dispatch({\n              type: ACCOUNT_NOT_CREATED,\n              payload: _context2.t0\n            });\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n};","map":{"version":3,"sources":["/home/lokpati/Desktop/EmployeesManager/src/reudx/actions/authAction.js"],"names":["firebase","EMAIL_CHANGE","PASSWORD_CHANGE","LOGIN_SENT","LOGIN_SUCCESS","LOGIN_REJECTED","CREATE_ACCOUNT","ACCOUNT_NOT_CREATED","emailChangeAction","text","type","payload","passwordChangeAction","loginUser","email","password","dispatch","auth","signInWithEmailAndPassword","user","createAccount","createUserWithEmailAndPassword"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,SACEC,YADF,EAEEC,eAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,cANF,EAOEC,mBAPF;AAUA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,IAAD,EAAU;AACzC,SAAO;AACLC,IAAAA,IAAI,EAAET,YADD;AAELU,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAMP,OAAO,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACH,IAAD,EAAU;AAC5C,SAAO;AACLC,IAAAA,IAAI,EAAER,eADD;AAELS,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAQP,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,OAAyB;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAChD,SAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHA,YAAAA,QAAQ,CAAC;AAAEN,cAAAA,IAAI,EAAEP,UAAR;AAAoBQ,cAAAA,OAAO,EAAE;AAA7B,aAAD,CAAR;AAFG;AAAA,6CAGgBX,QAAQ,CACxBiB,IADgB,GAEhBC,0BAFgB,CAEWJ,KAFX,EAEkBC,QAFlB,CAHhB;;AAAA;AAGGI,YAAAA,IAHH;AAMHH,YAAAA,QAAQ,CAAC;AACPN,cAAAA,IAAI,EAAEN,aADC;AAEPO,cAAAA,OAAO,EAAEQ;AAFF,aAAD,CAAR;AANG;AAAA;;AAAA;AAAA;AAAA;AAWHH,YAAAA,QAAQ,CAAC;AACPN,cAAAA,IAAI,EAAEL,cADC;AAEPM,cAAAA,OAAO;AAFA,aAAD,CAAR;;AAXG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAiBD,CAlBM;AAoBP,OAAO,IAAMS,aAAa,GAAG,SAAhBA,aAAgB,QAAyB;AAAA,MAAtBN,KAAsB,SAAtBA,KAAsB;AAAA,MAAfC,QAAe,SAAfA,QAAe;AACpD,SAAO,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHA,YAAAA,QAAQ,CAAC;AAAEN,cAAAA,IAAI,EAAEP,UAAR;AAAoBQ,cAAAA,OAAO,EAAE;AAA7B,aAAD,CAAR;AAFG;AAAA,6CAGgBX,QAAQ,CACxBiB,IADgB,GAEhBI,8BAFgB,CAEeP,KAFf,EAEsBC,QAFtB,CAHhB;;AAAA;AAGGI,YAAAA,IAHH;AAMHH,YAAAA,QAAQ,CAAC;AACPN,cAAAA,IAAI,EAAEJ,cADC;AAEPK,cAAAA,OAAO,EAAEQ;AAFF,aAAD,CAAR;AANG;AAAA;;AAAA;AAAA;AAAA;AAWHH,YAAAA,QAAQ,CAAC;AACPN,cAAAA,IAAI,EAAEH,mBADC;AAEPI,cAAAA,OAAO;AAFA,aAAD,CAAR;;AAXG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAiBD,CAlBM","sourcesContent":["import firebase from \"firebase\";\nimport {\n  EMAIL_CHANGE,\n  PASSWORD_CHANGE,\n  LOGIN_SENT,\n  LOGIN_SUCCESS,\n  LOGIN_REJECTED,\n  CREATE_ACCOUNT,\n  ACCOUNT_NOT_CREATED,\n} from \"./actionTypes\";\n\nexport const emailChangeAction = (text) => {\n  return {\n    type: EMAIL_CHANGE,\n    payload: text,\n  };\n};\nexport const passwordChangeAction = (text) => {\n  return {\n    type: PASSWORD_CHANGE,\n    payload: text,\n  };\n};\n\n//async action creators\nexport const loginUser = ({ email, password }) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: LOGIN_SENT, payload: null });\n      const user = await firebase\n        .auth()\n        .signInWithEmailAndPassword(email, password);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: user,\n      });\n    } catch (err) {\n      dispatch({\n        type: LOGIN_REJECTED,\n        payload: err,\n      });\n    }\n  };\n};\n\nexport const createAccount = ({ email, password }) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: LOGIN_SENT, payload: null });\n      const user = await firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password);\n      dispatch({\n        type: CREATE_ACCOUNT,\n        payload: user,\n      });\n    } catch (err) {\n      dispatch({\n        type: ACCOUNT_NOT_CREATED,\n        payload: err,\n      });\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}