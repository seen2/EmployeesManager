{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport firebase from \"firebase\";\nimport { NAME_CHANGE, PHONE_CHANGE, SHIFT_CHANGE, ADD_EMPLOYEE, EMPLOYEE_FETCH_SUCCESS } from \"./actionTypes\";\nexport var onNameChangeAction = function onNameChangeAction(text) {\n  return {\n    type: NAME_CHANGE,\n    payload: text\n  };\n};\nexport var onPhoneChangeAction = function onPhoneChangeAction(text) {\n  return {\n    type: PHONE_CHANGE,\n    payload: text\n  };\n};\nexport var onShiftChangeAction = function onShiftChangeAction(text) {\n  return {\n    type: SHIFT_CHANGE,\n    payload: text\n  };\n};\nexport var addEmployee = function addEmployee(employee) {\n  return function _callee(dispatch) {\n    var _firebase$auth, currentUser;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _firebase$auth = firebase.auth(), currentUser = _firebase$auth.currentUser;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(firebase.database().ref(\"/users/\" + currentUser.uid + \"/employees\").push(employee));\n\n          case 3:\n            dispatch({\n              type: ADD_EMPLOYEE,\n              payload: null\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var fetchEmployee = function fetchEmployee() {\n  return function (dispatch) {\n    var _firebase$auth2 = firebase.auth(),\n        currentUser = _firebase$auth2.currentUser;\n\n    firebase.database().ref(\"/users/\" + currentUser.uid + \"/employees\").on(\"value\", function (snapshot) {\n      dispatch({\n        type: EMPLOYEE_FETCH_SUCCESS,\n        payload: snapshot.val()\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/lokpati/Desktop/EmployeesManager/src/reudx/actions/employeeAction.js"],"names":["firebase","NAME_CHANGE","PHONE_CHANGE","SHIFT_CHANGE","ADD_EMPLOYEE","EMPLOYEE_FETCH_SUCCESS","onNameChangeAction","text","type","payload","onPhoneChangeAction","onShiftChangeAction","addEmployee","employee","dispatch","auth","currentUser","database","ref","uid","push","fetchEmployee","on","snapshot","val"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,SACEC,WADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,sBALF;AAQA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAU;AAC1C,SAAO;AACLC,IAAAA,IAAI,EAAEP,WADD;AAELQ,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACH,IAAD,EAAU;AAC3C,SAAO;AACLC,IAAAA,IAAI,EAAEN,YADD;AAELO,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAMP,OAAO,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACJ,IAAD,EAAU;AAC3C,SAAO;AACLC,IAAAA,IAAI,EAAEL,YADD;AAELM,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AASP,OAAO,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;AAEvC,SAAO,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BACmBd,QAAQ,CAACe,IAAT,EADnB,EACGC,WADH,kBACGA,WADH;AAAA;AAAA,6CAEChB,QAAQ,CACXiB,QADG,GAEHC,GAFG,aAEWF,WAAW,CAACG,GAFvB,iBAGHC,IAHG,CAGEP,QAHF,CAFD;;AAAA;AAMLC,YAAAA,QAAQ,CAAC;AAAEN,cAAAA,IAAI,EAAEJ,YAAR;AAAsBK,cAAAA,OAAO,EAAE;AAA/B,aAAD,CAAR;;AANK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAQD,CAVM;AAYP,OAAO,IAAMY,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACjC,SAAO,UAACP,QAAD,EAAc;AAAA,0BACKd,QAAQ,CAACe,IAAT,EADL;AAAA,QACXC,WADW,mBACXA,WADW;;AAEnBhB,IAAAA,QAAQ,CACLiB,QADH,GAEGC,GAFH,aAEiBF,WAAW,CAACG,GAF7B,iBAGGG,EAHH,CAGM,OAHN,EAGe,UAACC,QAAD,EAAc;AACzBT,MAAAA,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAEH,sBAAR;AAAgCI,QAAAA,OAAO,EAAEc,QAAQ,CAACC,GAAT;AAAzC,OAAD,CAAR;AACD,KALH;AAMD,GARD;AASD,CAVM","sourcesContent":["import firebase from \"firebase\";\n\nimport {\n  NAME_CHANGE,\n  PHONE_CHANGE,\n  SHIFT_CHANGE,\n  ADD_EMPLOYEE,\n  EMPLOYEE_FETCH_SUCCESS,\n} from \"./actionTypes\";\n\nexport const onNameChangeAction = (text) => {\n  return {\n    type: NAME_CHANGE,\n    payload: text,\n  };\n};\n\nexport const onPhoneChangeAction = (text) => {\n  return {\n    type: PHONE_CHANGE,\n    payload: text,\n  };\n};\nexport const onShiftChangeAction = (text) => {\n  return {\n    type: SHIFT_CHANGE,\n    payload: text,\n  };\n};\n\n//async action Creator\n\nexport const addEmployee = (employee) => {\n  // console.log(employee);\n  return async (dispatch) => {\n    const { currentUser } = firebase.auth();\n    await firebase\n      .database()\n      .ref(`/users/${currentUser.uid}/employees`)\n      .push(employee);\n    dispatch({ type: ADD_EMPLOYEE, payload: null });\n  };\n};\n\nexport const fetchEmployee = () => {\n  return (dispatch) => {\n    const { currentUser } = firebase.auth();\n    firebase\n      .database()\n      .ref(`/users/${currentUser.uid}/employees`)\n      .on(\"value\", (snapshot) => {\n        dispatch({ type: EMPLOYEE_FETCH_SUCCESS, payload: snapshot.val() });\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}