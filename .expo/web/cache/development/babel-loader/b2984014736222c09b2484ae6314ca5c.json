{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/lokpati/Desktop/EmployeesManager/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport YellowBox from \"react-native-web/dist/exports/YellowBox\";\nimport { Provider } from \"react-redux\";\nimport firebase from \"firebase\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport store from \"./src/reudx/store\";\nimport LoginFormScreen from \"./src/screens/LoginScreen\";\nimport EmployeeListScreen from \"./src/screens/EmployeeListScreen\";\nimport RegisterScreen from \"./src/screens/RegisterScreen\";\nimport AddEmployeeScreen from \"./src/screens/AddEmployeeScreen\";\nvar Stack = createStackNavigator();\nYellowBox.ignoreWarnings([\"Setting a timer\"]);\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      user: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var firebaseConfig = {\n        apiKey: \"AIzaSyBc36Rj9aJAMvEQ4W6j2aV5_gTLC23yf9A\",\n        authDomain: \"employeesmanager-eca23.firebaseapp.com\",\n        databaseURL: \"https://employeesmanager-eca23.firebaseio.com\",\n        projectId: \"employeesmanager-eca23\",\n        storageBucket: \"employeesmanager-eca23.appspot.com\",\n        messagingSenderId: \"1041033621397\",\n        appId: \"1:1041033621397:web:529f475a87830344d5509c\"\n      };\n      firebase.initializeApp(firebaseConfig);\n      firebase.auth().onAuthStateChanged(function (user) {\n        _this2.setState({\n          user: user\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, React.createElement(NavigationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, !this.state.user ? React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n        name: \"Login\",\n        component: LoginFormScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Register\",\n        component: RegisterScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      })) : React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n        name: \"EmployeeList\",\n        component: EmployeeListScreen,\n        options: function options(_ref) {\n          var route = _ref.route;\n          return {\n            headerRight: function headerRight() {\n              return React.createElement(Button, {\n                title: \"Log Out\",\n                onPress: function onPress() {\n                  firebase.auth().signOut();\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 25\n                }\n              });\n            }\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Add Employee\",\n        component: AddEmployeeScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      })))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/home/lokpati/Desktop/EmployeesManager/App.js"],"names":["React","Provider","firebase","createStackNavigator","NavigationContainer","store","LoginFormScreen","EmployeeListScreen","RegisterScreen","AddEmployeeScreen","Stack","YellowBox","ignoreWarnings","App","state","user","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","auth","onAuthStateChanged","setState","route","headerRight","signOut","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,KAAP;AACA,OAAOC,eAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,iBAAP;AAEA,IAAMC,KAAK,GAAGP,oBAAoB,EAAlC;AACAQ,SAAS,CAACC,cAAV,CAAyB,CAAC,iBAAD,CAAzB;;IAEqBC,G;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AADA,K;;;;;;wCAIY;AAAA;;AAClB,UAAIC,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,yCADW;AAEnBC,QAAAA,UAAU,EAAE,wCAFO;AAGnBC,QAAAA,WAAW,EAAE,+CAHM;AAInBC,QAAAA,SAAS,EAAE,wBAJQ;AAKnBC,QAAAA,aAAa,EAAE,oCALI;AAMnBC,QAAAA,iBAAiB,EAAE,eANA;AAOnBC,QAAAA,KAAK,EAAE;AAPY,OAArB;AAUArB,MAAAA,QAAQ,CAACsB,aAAT,CAAuBR,cAAvB;AACAd,MAAAA,QAAQ,CAACuB,IAAT,GAAgBC,kBAAhB,CAAmC,UAACX,IAAD,EAAU;AAC3C,QAAA,MAAI,CAACY,QAAL,CAAc;AAAEZ,UAAAA,IAAI,EAAEA;AAAR,SAAd;AACD,OAFD;AAGD;;;6BAEQ;AACP,aACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,QAAA,gBAAgB,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAAC,KAAKS,KAAL,CAAWC,IAAZ,GACC,0CACE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,OAAnB;AAA2B,QAAA,SAAS,EAAET,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,UAAnB;AAA8B,QAAA,SAAS,EAAEE,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADD,GAMC,0CACE,oBAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,cADP;AAEE,QAAA,SAAS,EAAED,kBAFb;AAGE,QAAA,OAAO,EAAE,uBAAe;AAAA,cAAZqB,KAAY,QAAZA,KAAY;AACtB,iBAAO;AACLC,YAAAA,WAAW,EAAE;AAAA,qBACX,oBAAC,MAAD;AACE,gBAAA,KAAK,EAAC,SADR;AAEE,gBAAA,OAAO,EAAE,mBAAM;AACb3B,kBAAAA,QAAQ,CAACuB,IAAT,GAAgBK,OAAhB;AACD,iBAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADW;AAAA;AADR,WAAP;AAUD,SAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAiBE,oBAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,cADP;AAEE,QAAA,SAAS,EAAErB,iBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBF,CAPJ,CADF,CADF,CADF;AAqCD;;;;EA5D8BT,KAAK,CAAC+B,S;;SAAlBlB,G","sourcesContent":["import React from \"react\";\nimport { Button, YellowBox } from \"react-native\";\nimport { Provider } from \"react-redux\";\nimport firebase from \"firebase\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\n\nimport store from \"./src/reudx/store\";\nimport LoginFormScreen from \"./src/screens/LoginScreen\";\nimport EmployeeListScreen from \"./src/screens/EmployeeListScreen\";\nimport RegisterScreen from \"./src/screens/RegisterScreen\";\nimport AddEmployeeScreen from \"./src/screens/AddEmployeeScreen\";\n\nconst Stack = createStackNavigator();\nYellowBox.ignoreWarnings([\"Setting a timer\"]);\n\nexport default class App extends React.Component {\n  state = {\n    user: null,\n  };\n\n  componentDidMount() {\n    var firebaseConfig = {\n      apiKey: \"AIzaSyBc36Rj9aJAMvEQ4W6j2aV5_gTLC23yf9A\",\n      authDomain: \"employeesmanager-eca23.firebaseapp.com\",\n      databaseURL: \"https://employeesmanager-eca23.firebaseio.com\",\n      projectId: \"employeesmanager-eca23\",\n      storageBucket: \"employeesmanager-eca23.appspot.com\",\n      messagingSenderId: \"1041033621397\",\n      appId: \"1:1041033621397:web:529f475a87830344d5509c\",\n    };\n    // Initialize Firebase\n    firebase.initializeApp(firebaseConfig);\n    firebase.auth().onAuthStateChanged((user) => {\n      this.setState({ user: user });\n    });\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName=\"Login\">\n            {!this.state.user ? (\n              <>\n                <Stack.Screen name=\"Login\" component={LoginFormScreen} />\n                <Stack.Screen name=\"Register\" component={RegisterScreen} />\n              </>\n            ) : (\n              <>\n                <Stack.Screen\n                  name=\"EmployeeList\"\n                  component={EmployeeListScreen}\n                  options={({ route }) => {\n                    return {\n                      headerRight: () => (\n                        <Button\n                          title=\"Log Out\"\n                          onPress={() => {\n                            firebase.auth().signOut();\n                          }}\n                        />\n                      ),\n                    };\n                  }}\n                />\n                <Stack.Screen\n                  name=\"Add Employee\"\n                  component={AddEmployeeScreen}\n                />\n              </>\n            )}\n          </Stack.Navigator>\n        </NavigationContainer>\n      </Provider>\n    );\n  }\n}\n\n/*\nI'm being lazy here, so dont't be smart bitch!!!!\n\n<!-- The core Firebase JS SDK is always required and must be listed first -->\n<script src=\"https://www.gstatic.com/firebasejs/7.19.1/firebase-app.js\"></script>\n\n<!-- TODO: Add SDKs for Firebase products that you want to use\n     https://firebase.google.com/docs/web/setup#available-libraries -->\n\n<script>\n  // Your web app's Firebase configuration\n  var firebaseConfig = {\n    apiKey: \"AIzaSyBc36Rj9aJAMvEQ4W6j2aV5_gTLC23yf9A\",\n    authDomain: \"employeesmanager-eca23.firebaseapp.com\",\n    databaseURL: \"https://employeesmanager-eca23.firebaseio.com\",\n    projectId: \"employeesmanager-eca23\",\n    storageBucket: \"employeesmanager-eca23.appspot.com\",\n    messagingSenderId: \"1041033621397\",\n    appId: \"1:1041033621397:web:529f475a87830344d5509c\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n</script>\n\n*/\n"]},"metadata":{},"sourceType":"module"}